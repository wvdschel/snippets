#!/bin/bash
# Add a number of git commits to a CodeCollaborator review, in the order specified on the command line.
# Created mostly because I always end up messing up my git-ccollab command arguments.

EXTRA_ARGS=""

if [[ z$REVIEW == z ]]; then
    echo Creating new review.
else
    echo Adding commits to review $REVIEW
    EXTRA_ARGS="$ARGS -r $REVIEW"
fi

if [[ ${#} -lt 1 ]]; then
    echo Error: no commits specified \(${#} arguments\).
    echo "Usage: [REVIEW=n] $0 commit1 [commit2 ...]"
    exit 1
fi

PREPARE_OUTPUT=`mktemp`
UPLOAD_OUTPUT=`mktemp`

COMMITS=$*
for commit in $COMMITS; do
    echo Adding commit $commit to review

    if ! (git-ccollab $EXTRA_ARGS -c $commit > $PREPARE_OUTPUT); then
        echo Failed to stage commit $commit, git-ccollab output:
        cat $PREPARE_OUTPUT
        rm -rf $PREPARE_OUTPUT $UPLOAD_OUTPUT
        exit 1
    fi

    if ! (ccollab admin batch codeCollab.xml > $UPLOAD_OUTPUT); then
        echo Failed to upload commit $commit, ccollab output:
        cat $UPLOAD_OUTPUT
        rm -rf $PREPARE_OUTPUT $UPLOAD_OUTPUT
        exit 1
    fi

    if [[ z$REVIEW == z ]] ; then
        #New review created: Review #257288: "Untitled Review"
        REVIEW=`cat $UPLOAD_OUTPUT | grep -E "^New review created" | cut -d'#' -f2 | cut -d: -f1`
        echo Review created: $REVIEW
        EXTRA_ARGS="$ARGS -r $REVIEW"
    fi

    echo Added $commit to $REVIEW
done
